{"ast":null,"code":"import api from \"../../utils/api\";\nimport { CLEAR_PROFILE, GET_PROFILE, GET_PROFILES, GET_REPOS, NO_REPOS, PROFILE_ERROR, UPDATE_PROFILE } from \"../types\";\nimport { setAlert } from \"./alertAction\";\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  try {\n    const res = await api.get(\"/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await api.get(`/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.statusCode\n      }\n    });\n  }\n};\n// Get Github repos\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await api.get(`/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: NO_REPOS\n    });\n  }\n};\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await api.get(\"/profile/me\");\n    console.log(\"inside the getCurrentProfile method\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.statusCode\n      }\n    });\n  }\n};\nexport const createProfile = function (formData) {\n  let edit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return async dispatch => {\n    try {\n      const res = await api.post(\"/profile\", formData);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\n// Add Experience\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const res = await api.put(\"/profile/experience\", formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    navigate(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n// Delete experience\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await api.delete(`/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["api","CLEAR_PROFILE","GET_PROFILE","GET_PROFILES","GET_REPOS","NO_REPOS","PROFILE_ERROR","UPDATE_PROFILE","setAlert","getProfiles","dispatch","type","res","get","payload","data","err","msg","response","statusText","status","getProfileById","userId","statusCode","getGithubRepos","username","getCurrentProfile","console","log","createProfile","formData","edit","post","errors","forEach","error","addExperience","navigate","put","deleteExperience","id","delete"],"sources":["/Users/vidhi/Desktop/fullstack/KHREACTF/src/redux/actions/profileAction.js"],"sourcesContent":["import api from \"../../utils/api\";\nimport {\n  CLEAR_PROFILE,\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  NO_REPOS,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n} from \"../types\";\nimport { setAlert } from \"./alertAction\";\n\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await api.get(\"/profile\");\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await api.get(`/profile/user/${userId}`);\n    dispatch({ type: GET_PROFILE, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.statusCode,\n      },\n    });\n  }\n};\n// Get Github repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await api.get(`/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: NO_REPOS,\n    });\n  }\n};\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await api.get(\"/profile/me\");\n    console.log(\"inside the getCurrentProfile method\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.statusCode,\n      },\n    });\n  }\n};\n\nexport const createProfile =\n  (formData, edit = false) =>\n  async (dispatch) => {\n    try {\n      const res = await api.post(\"/profile\", formData);\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data,\n      });\n\n      dispatch(\n        setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\")\n      );\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  };\n\n// Add Experience\nexport const addExperience = (formData, navigate) => async (dispatch) => {\n  try {\n    const res = await api.put(\"/profile/experience\", formData);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n\n    navigate(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n// Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await api.delete(`/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}