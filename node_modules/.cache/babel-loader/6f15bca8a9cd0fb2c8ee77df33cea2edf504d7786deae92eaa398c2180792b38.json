{"ast":null,"code":"var _jsxFileName = \"/Users/vidhi/Desktop/fullstack/KHREACTF/src/components/profile/Profile.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { getProfileById } from \"../../redux/actions/profileAction\";\nimport Spinner from \"../layouts/Spinner\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileGitHub from \"./ProfileGitHub\";\nimport ProfileTop from \"./ProfileTop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Profile = _ref => {\n  _s();\n  let {\n    getProfileById,\n    profile: {\n      profile\n    },\n    auth\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  // we may collect one or more params from the routing path as per hte req.\n  // it will help us to get the userId from the routing path .i.e. it help us to get the :id value.\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id]);\n  const editProfileButton = /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    children: \"Edit Profile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n  const profileGithubUserName = \"\";\n  // (\n  //   <ProfileGitHub username={profile.githubusername} />\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profiles\",\n          className: \"btn btn-light\",\n          children: \"Back To Profiles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && editProfileButton, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-grid my-1\",\n          children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n            profile: profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n            profile: profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-exp bg-white p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-primary\",\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: profile.experience.map(e => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n                experience: e\n              }, e._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this))\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"No experience credentials\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-edu bg-white p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-primary\",\n              children: \"Education\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: profile.education.map(e => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n                education: e\n              }, e._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this))\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"No education credentials\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), profile.githubusername && profileGithubUserName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profileReducer,\n  auth: state.authReducer\n});\nconst mapDispatchToProps = {\n  getProfileById\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["PropTypes","React","useEffect","connect","useParams","Link","getProfileById","Spinner","ProfileAbout","ProfileEducation","ProfileExperience","ProfileGitHub","ProfileTop","Profile","profile","auth","id","editProfileButton","profileGithubUserName","isAuthenticated","loading","user","_id","experience","length","map","e","education","githubusername","propTypes","func","isRequired","mapStateToProps","state","profileReducer","authReducer","mapDispatchToProps"],"sources":["/Users/vidhi/Desktop/fullstack/KHREACTF/src/components/profile/Profile.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { getProfileById } from \"../../redux/actions/profileAction\";\nimport Spinner from \"../layouts/Spinner\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileGitHub from \"./ProfileGitHub\";\nimport ProfileTop from \"./ProfileTop\";\nexport const Profile = ({ getProfileById, profile: { profile }, auth }) => {\n  const { id } = useParams();\n  // we may collect one or more params from the routing path as per hte req.\n  // it will help us to get the userId from the routing path .i.e. it help us to get the :id value.\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id]);\n  const editProfileButton = (\n    <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n      Edit Profile\n    </Link>\n  );\n  const profileGithubUserName = \"\";\n  // (\n  //   <ProfileGitHub username={profile.githubusername} />\n  // );\n\n  return (\n    <div>\n      {\" \"}\n      <section className=\"container\">\n        {profile === null ? (\n          <Spinner />\n        ) : (\n          <>\n            <Link to=\"/profiles\" className=\"btn btn-light\">\n              Back To Profiles\n            </Link>\n            {auth.isAuthenticated &&\n              auth.loading === false &&\n              auth.user._id === profile.user._id &&\n              editProfileButton}\n            <div className=\"profile-grid my-1\">\n              <ProfileTop profile={profile} />\n              <ProfileAbout profile={profile} />\n              <div className=\"profile-exp bg-white p-2\">\n                <h2 className=\"text-primary\">Experience</h2>\n                {profile.experience.length > 0 ? (\n                  <>\n                    {profile.experience.map((e) => (\n                      <ProfileExperience key={e._id} experience={e} />\n                    ))}\n                  </>\n                ) : (\n                  <h4>No experience credentials</h4>\n                )}\n              </div>\n\n              <div className=\"profile-edu bg-white p-2\">\n                <h2 className=\"text-primary\">Education</h2>\n                {profile.education.length > 0 ? (\n                  <>\n                    {profile.education.map((e) => (\n                      <ProfileEducation key={e._id} education={e} />\n                    ))}\n                  </>\n                ) : (\n                  <h4>No education credentials</h4>\n                )}\n              </div>\n\n              {profile.githubusername && profileGithubUserName}\n            </div>\n          </>\n        )}\n      </section>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profileReducer,\n  auth: state.authReducer,\n});\n\nconst mapDispatchToProps = { getProfileById };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}