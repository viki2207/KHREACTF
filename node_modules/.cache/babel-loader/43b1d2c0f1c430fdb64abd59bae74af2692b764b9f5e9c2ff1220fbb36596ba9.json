{"ast":null,"code":"// import PropTypes from \"prop-types\";\n// import React, { useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// import DashboardAction from \"./DashboardAction\";\n// import { getCurrentProfile } from \"../../redux/actions/profileAction\";\n// import { Link } from \"react-router-dom\";\n// import DisplayExpDetails from \"./DisplayExpDetails\";\n// export const Dashboard = ({\n//   getCurrentProfile,\n//   profileReducer: { profile },\n//   auth: { user },\n// }) => {\n//   useEffect(() => {\n//     getCurrentProfile();\n//   }, [getCurrentProfile]);\n\n//   const successPart = (\n//     <>\n//       {\" \"}\n//       <DashboardAction></DashboardAction>Exp Edu\n//     </>\n//   );\n//   const failurePart = (\n//     <>\n//       {\" \"}\n//       <p>You have not yet setup a profile, please add some info</p>\n//       <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n//         Create Profile\n//       </Link>\n//     </>\n//   );\n//   return (\n//     <div>\n//       <section className=\"container\">\n//         <h1 className=\"large text-primary\">Dashboard</h1>\n//         <p className=\"lead\">\n//           <i className=\"fas fa-user\" /> Welcome {user && user.name}\n//         </p>\n//         {profile !== null ? successPart : failurePart}\n//       </section>\n//     </div>\n//   );\n// };\n\n// Dashboard.propTypes = {\n//   getCurrentProfile: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired,\n//   profileReducer: PropTypes.object.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   auth: state.authReducer,\n//   profileReducer: state.profileReducer,\n// });\n\n// const mapDispatchToProps = { getCurrentProfile };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"names":[],"sources":["/Users/vidhi/Desktop/fullstack/KHREACTF/src/components/dashboard/Dashboard.jsx"],"sourcesContent":["// import PropTypes from \"prop-types\";\n// import React, { useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// import DashboardAction from \"./DashboardAction\";\n// import { getCurrentProfile } from \"../../redux/actions/profileAction\";\n// import { Link } from \"react-router-dom\";\n// import DisplayExpDetails from \"./DisplayExpDetails\";\n// export const Dashboard = ({\n//   getCurrentProfile,\n//   profileReducer: { profile },\n//   auth: { user },\n// }) => {\n//   useEffect(() => {\n//     getCurrentProfile();\n//   }, [getCurrentProfile]);\n\n//   const successPart = (\n//     <>\n//       {\" \"}\n//       <DashboardAction></DashboardAction>Exp Edu\n//     </>\n//   );\n//   const failurePart = (\n//     <>\n//       {\" \"}\n//       <p>You have not yet setup a profile, please add some info</p>\n//       <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n//         Create Profile\n//       </Link>\n//     </>\n//   );\n//   return (\n//     <div>\n//       <section className=\"container\">\n//         <h1 className=\"large text-primary\">Dashboard</h1>\n//         <p className=\"lead\">\n//           <i className=\"fas fa-user\" /> Welcome {user && user.name}\n//         </p>\n//         {profile !== null ? successPart : failurePart}\n//       </section>\n//     </div>\n//   );\n// };\n\n// Dashboard.propTypes = {\n//   getCurrentProfile: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired,\n//   profileReducer: PropTypes.object.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   auth: state.authReducer,\n//   profileReducer: state.profileReducer,\n// });\n\n// const mapDispatchToProps = { getCurrentProfile };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}