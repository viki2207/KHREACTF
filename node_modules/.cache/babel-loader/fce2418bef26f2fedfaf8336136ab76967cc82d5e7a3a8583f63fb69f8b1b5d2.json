{"ast":null,"code":"import { REMOVE_ALERT, SET_ALERT } from \"../types\";\nconst initialState = [];\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case SET_ALERT:\n      console.log(JSON.stringify(payload));\n      // it will brings the array.\n      return [...state, payload];\n    case REMOVE_ALERT:\n      // payload brings the id.\n\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["REMOVE_ALERT","SET_ALERT","initialState","state","action","type","payload","console","log","JSON","stringify","filter","alert","id"],"sources":["/Users/vidhi/Desktop/fullstack/KHREACTF/src/redux/reducers/alertReducer.js"],"sourcesContent":["import { REMOVE_ALERT, SET_ALERT } from \"../types\";\n\nconst initialState = [];\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      console.log(JSON.stringify(payload));\n      // it will brings the array.\n      return [...state, payload];\n\n    case REMOVE_ALERT:\n      // payload brings the id.\n\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,SAAS,QAAQ,UAAU;AAElD,MAAMC,YAAY,GAAG,EAAE;AACvB,gBAAe,YAAkC;EAAA,IAAjCC,KAAK,uEAAGD,YAAY;EAAA,IAAEE,MAAM;EAC1C,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACV,KAAKJ,SAAS;MACZM,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;MACpC;MACA,OAAO,CAAC,GAAGH,KAAK,EAAEG,OAAO,CAAC;IAE5B,KAAKN,YAAY;MACf;;MAEA,OAAOG,KAAK,CAACQ,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKP,OAAO,CAAC;IACtD;MACE,OAAOH,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}